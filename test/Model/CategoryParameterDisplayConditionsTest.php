<?php
/**
 * CategoryParameterDisplayConditionsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  AllegroApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Allegro REST API
 *
 * https://developer.allegro.pl/about  Documentation is generated from [this](https://developer.allegro.pl/swagger.yaml) OpenAPI 3.0 specification file.
 *
 * The version of the OpenAPI document: latest
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace AllegroApi\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CategoryParameterDisplayConditionsTest Class Doc Comment
 *
 * @category    Class
 * @description Restricts the circumstances when this parameter should be displayed e.g. on a user form. &#x60;null&#x60; if this parameter is displayed always. Present if this parameter should be displayed only if all of the contained conditions of all condition types are fulfilled. At least one condition is contained if this field is present.
 * @package     AllegroApi
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CategoryParameterDisplayConditionsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CategoryParameterDisplayConditions"
     */
    public function testCategoryParameterDisplayConditions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "parameters_with_value"
     */
    public function testPropertyParametersWithValue()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
